
let [D_TEXT_ENCODER, D_TEXT_DECODER]
	= 'undefined' === typeof Buffer
		? ('undefined' === typeof TextEncoder
			? [new (require('util').TextEncoder)(), new (require('util').TextDecoder)()]  // eslint-disable-line global-require
			: [new TextEncoder(), new TextDecoder()])
		: [{encode:s => Buffer.from(s, 'utf-8')}, {decode:at => Buffer.from(at).toString('utf-8')}];


const AT_UTF_16_TOKEN = new Uint8Array([0xfe]);

const X_ENCODING_TYPED_ARRAY_INT8 = 0x11;
const X_ENCODING_TYPED_ARRAY_UINT8 = 0x21;
const X_ENCODING_TYPED_ARRAY_UINT8_CLAMPED = 0x31;
const X_ENCODING_TYPED_ARRAY_INT16 = 0x12;
const X_ENCODING_TYPED_ARRAY_UINT16 = 0x22;
const X_ENCODING_TYPED_ARRAY_INT32 = 0x14;
const X_ENCODING_TYPED_ARRAY_UINT32 = 0x24;
const X_ENCODING_TYPED_ARRAY_FLOAT32 = 0x44;
const X_ENCODING_TYPED_ARRAY_FLOAT64 = 0x48;
const X_ENCODING_TYPED_ARRAY_BIGINT64 = 0x58;
const X_ENCODING_TYPED_ARRAY_BIGUINT64 = 0x68;


module.exports = {
	// popcount for uint32s
	popcount_uint32(x) {
		x -= (x >> 1) & 0x55555555;
		x = (x & 0x33333333) + ((x >> 2) & 0x33333333);
		return ((x + (x >> 4) & 0xf0f0f0f) * 0x1010101) >> 24;
	},

	D_TEXT_ENCODER,
	D_TEXT_DECODER,
	AT_UTF_16_TOKEN,

	X_ENCODING_TYPED_ARRAY_INT8,
	X_ENCODING_TYPED_ARRAY_UINT8,
	X_ENCODING_TYPED_ARRAY_UINT8_CLAMPED,
	X_ENCODING_TYPED_ARRAY_INT16,
	X_ENCODING_TYPED_ARRAY_UINT16,
	X_ENCODING_TYPED_ARRAY_INT32,
	X_ENCODING_TYPED_ARRAY_UINT32,
	X_ENCODING_TYPED_ARRAY_FLOAT32,
	X_ENCODING_TYPED_ARRAY_FLOAT64,
	X_ENCODING_TYPED_ARRAY_BIGINT64,
	X_ENCODING_TYPED_ARRAY_BIGUINT64,

	H_ENCODING_TO_TYPED_ARRAY: {
		[X_ENCODING_TYPED_ARRAY_INT8]: Int8Array,
		[X_ENCODING_TYPED_ARRAY_UINT8]: Uint8Array,
		[X_ENCODING_TYPED_ARRAY_UINT8_CLAMPED]: Uint8ClampedArray,
		[X_ENCODING_TYPED_ARRAY_INT16]: Int16Array,
		[X_ENCODING_TYPED_ARRAY_UINT16]: Uint16Array,
		[X_ENCODING_TYPED_ARRAY_INT32]: Int32Array,
		[X_ENCODING_TYPED_ARRAY_UINT32]: Uint32Array,
		[X_ENCODING_TYPED_ARRAY_FLOAT32]: Float32Array,
		[X_ENCODING_TYPED_ARRAY_FLOAT64]: Float64Array,
		[X_ENCODING_TYPED_ARRAY_BIGINT64]: BigInt64Array,
		[X_ENCODING_TYPED_ARRAY_BIGUINT64]: BigUint64Array,
	},
};
